"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[6108],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7111:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(1163),r=(n(9496),n(9613));const l={},o="3. JSX",i={unversionedId:"vault/React_-_basics/JSX",id:"vault/React_-_basics/JSX",title:"3. JSX",description:"Created Thursday 27 August 2020",source:"@site/docs/vault/2_React_-_basics/1_JSX.md",sourceDirName:"vault/2_React_-_basics",slug:"/vault/React_-_basics/JSX",permalink:"/docs/vault/React_-_basics/JSX",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vault/2_React_-_basics/1_JSX.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3. How React works",permalink:"/docs/vault/React_info_and_setup/How_React_works"},next:{title:"0. React elements",permalink:"/docs/vault/React_-_basics/React_Components/React_elements"}},s={},c=[{value:"Why",id:"why",level:3},{value:"How",id:"how",level:3},{value:"What",id:"what",level:3},{value:"About JSX",id:"about-jsx",level:4}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"3-jsx"},"3. JSX"),(0,r.kt)("p",null,"Created Thursday 27 August 2020"),(0,r.kt)("h3",{id:"why"},"Why"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"React uses a declarative approach to code UIs. JSX makes this easy."),(0,r.kt)("li",{parentName:"ul"},"JSX also makes the code ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Intuitive and readable, instead of function calls."),(0,r.kt)("li",{parentName:"ul"},"Both structure and structure-related-logic-",(0,r.kt)("strong",{parentName:"li"},"expressions (not all logic)")," are kept together.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSX"},"function App() {\n    const ul = document.createElement('ul');\n    const li = document.createElement('li');\n    \n    ul.appendchild(li);\n    li.appendChild(document.createTextNode('...'));\n\n    return ul;\n}\n/* Same as\n    <ul>\n        <li>...</li>\n    </ul>\n*/\n")),(0,r.kt)("p",null,"Just imagine, the verbosity and un-intuitiveness of similar code."),(0,r.kt)("p",null,"Actually, JSX behaves like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<div className=\"intro\">Hello, world</div>\n// is equivalent to\nReact.createElement('div', {className: \"hello\"}, 'Hello, world' )\n")),(0,r.kt)("p",null,"or as ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/jsx-in-depth.html"},"JSX in Depth"),' describes it:\n"Fundamentally, JSX just provides syntactic sugar for the ',(0,r.kt)("inlineCode",{parentName:"p"},"React.createElement(component, props, ...children)"),' "'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),": React components are JavaScript functions, and are therefore supposed to return only one value. So, each component must have one and only one container. This is a disadvantage of JS, not of HTML."),(0,r.kt)("h3",{id:"how"},"How"),(0,r.kt)("p",null,"Handled by the Babel transpiler."),(0,r.kt)("h3",{id:"what"},"What"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Short for JavaScript XML"),(0,r.kt)("li",{parentName:"ul"},"JSX is ",(0,r.kt)("em",{parentName:"li"},"not")," necessary for using React, basic JS is fine too."),(0,r.kt)("li",{parentName:"ul"},"JSX is a syntactic sugar for JavaScript, and so can be stored in variables.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Rules for JSX"),"\n0. Like HTML except if specified otherwise."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Some reserved keywords are different:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"className")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"class")," attribute."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"htmlFor")," in HTML label tag instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"for"),"."))),(0,r.kt)("li",{parentName:"ol"},"JS ",(0,r.kt)("strong",{parentName:"li"},"expressions")," can be enclosed in braces {}. But avoid this, keep JSX lean - the logic outside JSX and result variable in JSX.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSX"},"function ExpenseItem(props) {\n  const month = 'March';\n  const day = 24;\n  return (<div>\n            <span> {day}th </span>\n            <span> {month} </span>\n          </div>);\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Components must start with a capital letter. Small letter indicates HTML element, and may lead to errors."),(0,r.kt)("li",{parentName:"ol"},"JSX is an expression too, so one can store it in a variable or return it."),(0,r.kt)("li",{parentName:"ol"},"JSX can restart inside JS, but still JSX and JS should be differentiated with a {} for the JS part. Simply remember that JSX is an object and it doesn't make sense to write objects after one another. Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSX"},"const day = 24;\nconst month = 'March';\nreturn <div>{day}<span>th</span> {month}</div>;\n// 24th March\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," are rendered as empty whitespace. To really render them, convert to string first, like so ",(0,r.kt)("inlineCode",{parentName:"li"},"String(null)"),".")),(0,r.kt)("p",null,"See a gist of ",(0,r.kt)("a",{parentName:"p",href:"https://flaviocopes.com/jsx/"},"more")," rules."),(0,r.kt)("h4",{id:"about-jsx"},"About JSX"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JSX prevents injection attacks - everything is converted into a string before being rendered."),(0,r.kt)("li",{parentName:"ul"},"JSX represents objects.")))}d.isMDXComponent=!0}}]);