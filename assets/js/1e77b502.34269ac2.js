"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[7537],{9613:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},_=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(a),_=r,h=p["".concat(c,".").concat(_)]||p[_]||u[_]||o;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=_;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}_.displayName="MDXCreateElement"},6715:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(1163),r=(a(9496),a(9613));const o={},i="174. How to (Not) connect to a database",s={unversionedId:"home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/How_to_not_connect_to_a_database",id:"home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/How_to_not_connect_to_a_database",title:"174. How to (Not) connect to a database",description:"Created Monday 18 July 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests/174_How_to_not_connect_to_a_database.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests",slug:"/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/How_to_not_connect_to_a_database",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/How_to_not_connect_to_a_database",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests/174_How_to_not_connect_to_a_database.md",tags:[],version:"current",sidebarPosition:174,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"173. Module Introduction",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Module_Introduction"},next:{title:"175. Using the Star Wars API",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Using_the_Star_Wars_API"}},c={},l=[{value:"Talking to a DB directly from client side app",id:"talking-to-a-db-directly-from-client-side-app",level:5},{value:"Back-end App",id:"back-end-app",level:5}],d={toc:l},p="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"174-how-to-not-connect-to-a-database"},"174. How to (Not) connect to a database"),(0,r.kt)("p",null,"Created Monday 18 July 2022"),(0,r.kt)("h5",{id:"talking-to-a-db-directly-from-client-side-app"},"Talking to a DB directly from client side app"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Browser-side apps don't, and shouldn't directly talk to databases."),(0,r.kt)("li",{parentName:"ul"},"If an app does, the it's very badly written and highly unsecure app.\n",(0,r.kt)("img",{src:a(6867).Z,width:"913",height:"160"}),"\nBut why?"),(0,r.kt)("li",{parentName:"ul"},"This is difficult to do (technically)."),(0,r.kt)("li",{parentName:"ul"},"All client side code is available to the user (i.e. via the browser dev tools, for example). Connecting ",(0,r.kt)("em",{parentName:"li"},"directly")," to a database in a client app would, thus, expose database credentials to the outside world, which is not desirable and a huge security concern.\nNote: to know more about client-side code accessibility by the user, see ",(0,r.kt)("a",{parentName:"li",href:"https://academind.com/tutorials/hide-javascript-code"},"this"),"."),(0,r.kt)("li",{parentName:"ul"},"Performance issues.")),(0,r.kt)("p",null,"In short, it's not secure."),(0,r.kt)("p",null,"How do we then read/write data persistently in our client-side app (React app, for example)?"),(0,r.kt)("h5",{id:"back-end-app"},"Back-end App"),(0,r.kt)("p",null,'We employ a "back-end app" as a bridge between the client-app (React in this case) and the database. Essentially, it\'s a program running on the server, which is connected to the database program. '),(0,r.kt)("p",null,"Note: The database and back-end app may or may not be running on the same physical machine. It does not matter either way, it's irrelevant to the client-app."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(5588).Z,width:"889",height:"357"})),(0,r.kt)("p",null,"The back-end app has all the credentials of the database, and as it's code/data is not accessible to the client-side (in general, i.e. except what is allowed to be transmitted), there's no security issue."),(0,r.kt)("p",null,"OK, but how does the client-app read/write to the database?"),(0,r.kt)("p",null,"Ignore authentication and authorization of the user (which is also a responsibility of the back-end) for now. The back-end app exposes an API (Application Programming Interface) which works according to HTTP, and is continuously listening for HTTP requests."),(0,r.kt)("p",null,"Finally, the client-side app makes HTTP requests to available APIs, via URLs for reading/writing data from/to the database. The client-side processes the response and populates/updates the UI accordingly in the browser."))}u.isMDXComponent=!0},6867:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/174_How_to_not_connect_to_a_database-image-1-883006b77d5870277ccc65fffc442857.png"},5588:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/174_How_to_not_connect_to_a_database-image-2-7213b449d2ddc1c2d63be6e670439be8.png"}}]);