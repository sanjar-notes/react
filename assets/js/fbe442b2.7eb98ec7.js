"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[1404],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>_});var a=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,_=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return r?a.createElement(_,s(s({ref:t},p),{},{components:r})):a.createElement(_,s({ref:t},p))}));function _(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:n,s[1]=o;for(var u=2;u<i;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8791:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=r(1163),n=(r(9496),r(9613));const i={},s="176. Our starting App and backend",o={unversionedId:"home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Our_starting_App_and_backend",id:"home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Our_starting_App_and_backend",title:"176. Our starting App and backend",description:"Created Monday 18 July 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests/176_Our_starting_App_and_backend.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests",slug:"/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Our_starting_App_and_backend",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Our_starting_App_and_backend",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/14_Sending_HTTP_requests/176_Our_starting_App_and_backend.md",tags:[],version:"current",sidebarPosition:176,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"175. Using the Star Wars API",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Using_the_Star_Wars_API"},next:{title:"177. Sending a GET request",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Sending_HTTP_requests/Sending_a_GET_request"}},l={},u=[{value:"More about REST/GraphQL APIs(optional)",id:"more-about-restgraphql-apisoptional",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...i}=e;return(0,n.kt)(c,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"176-our-starting-app-and-backend"},"176. Our starting App and backend"),(0,n.kt)("p",null,"Created Monday 18 July 2022"),(0,n.kt)("h3",{id:"more-about-restgraphql-apisoptional"},"More about REST/GraphQL APIs(optional)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://academind.com/tutorials/rest-vs-graphql"},"Link")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"API here refers to HTTP based web APIs."),(0,n.kt)("li",{parentName:"ul"},"About both:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"REST is an architectural style for web APIs. "),(0,n.kt)("li",{parentName:"ol"},"GraphQL is both a data manipulation language and a runtime for fulfilling queries made using the language."))),(0,n.kt)("li",{parentName:"ul"},"Both are ways to structure and work with web APIs."),(0,n.kt)("li",{parentName:"ul"},"A backend app may use either or both. REST is the more prevalent and popular one, GraphQL is a younger")),(0,n.kt)("p",null,"Similarities and differences\n",(0,n.kt)("img",{src:r(8934).Z,width:"1202",height:"505"})),(0,n.kt)("p",null,"Essentially, difference between the two is the consumption style. Of course, the backend-app is also implemented differently. The query, in case of GraphQL, should abide by the GraphQL query specification.\n",(0,n.kt)("img",{src:r(7283).Z,width:"1261",height:"527"}),"\n",(0,n.kt)("img",{src:r(483).Z,width:"1260",height:"720"}),"\n",(0,n.kt)("img",{src:r(5686).Z,width:"1254",height:"715"}),"\n",(0,n.kt)("img",{src:r(1752).Z,width:"960",height:"545"})),(0,n.kt)("p",null,"When should one use REST, or GraphQL?"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"REST")," ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Pros:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Easy to use and implement."))),(0,n.kt)("li",{parentName:"ul"},"Cons",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Excessive data transmission, generally. e.g. you only need {name, picture} for posts, but you get entire objects."),(0,n.kt)("li",{parentName:"ul"},"Multiple requests may be needed by the client."),(0,n.kt)("li",{parentName:"ul"},"Client is somewhat bulkier, because multiple resources need to be tied together"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"GraphQL"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Pros",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Data transported is minimal - more granular control over what is needed."),(0,n.kt)("li",{parentName:"ul"},"A single requests can fetch multiple resources."))),(0,n.kt)("li",{parentName:"ul"},"Cons",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A tad difficult to use and implement."),(0,n.kt)("li",{parentName:"ul"},"Client maybe bulkier due to GraphQL handling packages.")))))),(0,n.kt)("p",null,"Of course, these are general characteristics, i.e. the decision depends on the needs of the client-side app."))}d.isMDXComponent=!0},8934:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/176_Our_starting_App_and_backend-image-1-c5a7400e5416a526c41d0b68826a13ab.png"},7283:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/176_Our_starting_App_and_backend-image-2-6a49971befc64720236358c8cd829a8b.png"},483:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/176_Our_starting_App_and_backend-image-3-2699005058cb46e05040f27c10bf072a.png"},5686:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/176_Our_starting_App_and_backend-image-4-f16ad093748ba4e5f48d0c6fa2262717.png"},1752:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/176_Our_starting_App_and_backend-image-5-1927433ed5ccd5fe0cf48d0ee7793cdb.png"}}]);