"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[8439],{9613:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>_});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(a),d=r,_=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(_,i(i({ref:t},u),{},{components:a})):n.createElement(_,i({ref:t},u))}));function _(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8570:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(1163),r=(a(9496),a(9613));const o={},i="271. Using NavLinks",s={unversionedId:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Using_NavLinks",id:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Using_NavLinks",title:"271. Using NavLinks",description:"Created Sunday 28 August 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/271_Using_NavLinks.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router",slug:"/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Using_NavLinks",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Using_NavLinks",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/271_Using_NavLinks.md",tags:[],version:"current",sidebarPosition:271,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"270. Working with Links",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Working_with_Links"},next:{title:"275. Nested routes",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Nested_routes"}},c={},l=[{value:"Why",id:"why",level:3},{value:"How",id:"how",level:3},{value:"What",id:"what",level:3}],u={toc:l},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"271-using-navlinks"},"271. Using NavLinks"),(0,r.kt)("p",null,"Created Sunday 28 August 2022"),(0,r.kt)("h3",{id:"why"},"Why"),(0,r.kt)("p",null,"Consider this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/react-router-demo/commit/28ac9b51da8d683876eca2e41d0a6bd2ef826621"},"code"),". There's an important feature that's missing - we should be able to somehow highlight on what page we are (by highlighting the link). This, if done, normally, will take some custom code, i.e. something like ",(0,r.kt)("inlineCode",{parentName:"p"},"className={window.location.pathname === '.../path' ? {styles_for_navLink}: {}}"),"."),(0,r.kt)("p",null,"React Router provides a functionality to ",(0,r.kt)("em",{parentName:"p"},"add")," CSS classes to ",(0,r.kt)("inlineCode",{parentName:"p"},"Link"),"s based on the current URL. Instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"Link")," (which is agnostic to current URL), use ",(0,r.kt)("inlineCode",{parentName:"p"},"NavLink"),", which accepts a class as prop that gets applied conditionally based on current URL."),(0,r.kt)("h3",{id:"how"},"How"),(0,r.kt)("p",null,"Syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"{// 1. Simple class\n<NavLink activeClassName='myActiveClass' to=\"/welcome\">Welcome<NavLink>\n\n{// 2. CSS modules\nimport classes from './MyComponent.module.css';\n\n<NavLink activeClassName={classes.myActiveClass} to=\"/welcome\">Welcome<NavLink>;\n\n{// 3. If activeClassName prop is omitted\n<NavLink to=\"/welcome\">Welcome</NavLink>;\n \n{/* added class name will only be present if current URL matches 'to' prop value */}\n")),(0,r.kt)("p",null,"will render as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<a href="/welcome" class="myActiveClass">... \x3c!-- URL === \'/welcome\', prop used - string or CSS module - #1, #2 --\x3e \n\n<a href="/welcome" class="active">... \x3c!-- URL === \'/welcome\', prop not used, #3 --\x3e\n\n<a href="/welcome" >... \x3c!-- URL !== \'/welcome\', no class by Router --\x3e\n')),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"activeClassName")," prop is omitted, 'active' is added as class, otherwise prop value is added as class, assuming URL match."),(0,r.kt)("li",{parentName:"ol"},"If current URL does not match, no classes are added by React Router.")),(0,r.kt)("h3",{id:"what"},"What"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NavLink")," behaves just like ",(0,r.kt)("inlineCode",{parentName:"p"},"Link")," except conditional classes based on current URL."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/react-router-demo/commit/4cbb0b0fad4bab9c6451b254b15fd81ec953b490"},"code example"),"."))}m.isMDXComponent=!0}}]);