"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[1750],{9613:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),_=o,h=u["".concat(s,".").concat(_)]||u[_]||p[_]||r;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=_;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},6839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(1163),o=(n(9496),n(9613));const r={},i="157. useCallback and its dependencies",l={unversionedId:"home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/useCallback_and_its_dependencies",id:"home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/useCallback_and_its_dependencies",title:"157. useCallback and its dependencies",description:"Created Monday 11 July 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/12_Behind_the_scenes_of_React_and_optimization_techniques/157_useCallback_and_its_dependencies.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/12_Behind_the_scenes_of_React_and_optimization_techniques",slug:"/home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/useCallback_and_its_dependencies",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/useCallback_and_its_dependencies",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/12_Behind_the_scenes_of_React_and_optimization_techniques/157_useCallback_and_its_dependencies.md",tags:[],version:"current",sidebarPosition:157,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"156. Prevent function re-evaluation with useCallback",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/Prevent_function_re_creation_with_useCallback"},next:{title:"158. Component instance and state",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Behind_the_scenes_of_React_and_optimization_techniques/Component_instance_and_state"}},s={},c=[{value:"Why",id:"why",level:3},{value:"How",id:"how",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"157-usecallback-and-its-dependencies"},"157. useCallback and its dependencies"),(0,o.kt)("p",null,"Created Monday 11 July 2022"),(0,o.kt)("h3",{id:"why"},"Why"),(0,o.kt)("p",null,"What is the use of the dependency array in ",(0,o.kt)("inlineCode",{parentName:"p"},"useCallback")," ? To answer this, let's think of how ",(0,o.kt)("inlineCode",{parentName:"p"},"useCallback")," works. Consider the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState, useCallback } from 'react';\n\nfunction Main() {\n    const [show, setShow] = useState(false);\n    const [allowToggle, setAllowToggle] = useState(false);\n\n    const toggleHandler = useCallback(() => {\n            if(allowToggle)\n                setShow(prev => !prev);\n        , []); // Will this handler work?\n        \n    const allowToggleHandler = () => setAllowToggle(prev => !prev);\n        \n    return (<>\n            {show && 'Message visible'}\n            <Button handler={allowToggleHandler}>{allowToggle ? 'Disallow' : 'Allow'}Toggle</Button>\n                <Button handler={toggleHandler}>Toggle</Button>     \n            </>);\n}\n")),(0,o.kt)("p",null,"Will the handler maintain referential integrity between re-evaluations? No, it will not. Reason: ",(0,o.kt)("inlineCode",{parentName:"p"},"useCallback")," ",(0,o.kt)("em",{parentName:"p"},"saves")," the snapshot of the callback along with all it's variables (even external ones). This means the callback's dependent variable (",(0,o.kt)("inlineCode",{parentName:"p"},"allowToggle")," in this case) is actually a copy instead of the actual variable reference. Even if the component updates and ",(0,o.kt)("inlineCode",{parentName:"p"},"allowToggle")," becomes ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", the callback doesn't change."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In short, the dependency array allows the re-creation of the callback, if it's dependent on external variables. This is ",(0,o.kt)("em",{parentName:"li"},"very")," important and show be kept in mind.")),(0,o.kt)("h3",{id:"how"},"How"),(0,o.kt)("p",null,"To make this example work, add ",(0,o.kt)("inlineCode",{parentName:"p"},"allowToggle")," to the dependency array, like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const toggleHandler = useCallback(() => {\n    if(allowToggle)\n        setShow(prev => !prev);\n}, [allowToggle]); // will work now\n")))}p.isMDXComponent=!0}}]);