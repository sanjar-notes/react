"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[3512],{9613:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),u=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(h,i(i({ref:t},s),{},{components:a})):n.createElement(h,i({ref:t},s))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4285:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=a(1163),r=(a(9496),a(9613));const o={},i="288. Writing more flexible Routing code",l={unversionedId:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Writing_more_flexible_Routing_code",id:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Writing_more_flexible_Routing_code",title:"288. Writing more flexible Routing code",description:"Created Sunday 02 October 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/288_Writing_more_flexible_Routing_code.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router",slug:"/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Writing_more_flexible_Routing_code",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Writing_more_flexible_Routing_code",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/288_Writing_more_flexible_Routing_code.md",tags:[],version:"current",sidebarPosition:288,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"286. Working with Query Params",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Working_with_Query_Params"},next:{title:"289 v5 Summary",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/v5_Summary"}},c={},u=[{value:"Why",id:"why",level:2},{value:"How",id:"how",level:2},{value:"What",id:"what",level:2},{value:"Path object instead of string (optional)",id:"path-object-instead-of-string-optional",level:2},{value:"Note",id:"note",level:2}],s={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"288-writing-more-flexible-routing-code"},"288. Writing more flexible Routing code"),(0,r.kt)("p",null,"Created Sunday 02 October 2022"),(0,r.kt)("h2",{id:"why"},"Why"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We've been using hardcoded routes in the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/react-router-practice"},"practice app"),". This is of course, not a good thing."),(0,r.kt)("li",{parentName:"ul"},"Note that React Router still needs absolute URLs at all places (",(0,r.kt)("inlineCode",{parentName:"li"},"Route.path"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Link.to"),"), that doesn't change and is not a problem."),(0,r.kt)("li",{parentName:"ul"},"We just want to minimize hardcoded stuff.")),(0,r.kt)("h2",{id:"how"},"How"),(0,r.kt)("p",null,"If there was a way to get the URL for the parent ",(0,r.kt)("inlineCode",{parentName:"p"},"Route")," in a component, we could use that to create URL to be used in the component (as React Router needs absolute paths at all times)."),(0,r.kt)("p",null,"This way, even if we want to change the name of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Route")," higher up in the hierarchy, it would have no effect on any other ",(0,r.kt)("inlineCode",{parentName:"p"},"Route"),"s (above or below level)."),(0,r.kt)("p",null,"Additionally, we can store each path node as a string variable, so we don't have to touch UI code, at all, even if route name changes."),(0,r.kt)("h2",{id:"what"},"What"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useRouteMatch"),' hook provides an object that contains the "matched" URL of the parent ',(0,r.kt)("inlineCode",{parentName:"p"},"Route"),", and other info. We use it to create URLs."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Route } from 'react-router-dom';\n\nfunction App() {\n    return <Route path=\"/welcome\"><Child/></Route>;\n}\n\nfunction Child {\n    const match = useRouteMatch();\n    \n    return <><h1>Previous route: {match.url}</h1></>;\n}\n")),(0,r.kt)("h2",{id:"path-object-instead-of-string-optional"},"Path object instead of string (optional)"),(0,r.kt)("p",null,"We are not hardcoding strings now, but we are still creating strings using ",(0,r.kt)("inlineCode",{parentName:"p"},"+"),"  or string interpolation."),(0,r.kt)("p",null,"There is a better way."),(0,r.kt)("p",null,"All the places where we have supplied strings, i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"Link.to"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"NavLink.to"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Route.path"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useHistory().push()")," also accept an object, instead of a string. This object will be used to automatically create a string."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Link to={{ search: "sort=true" }}>Sort</Link>;\n\n<Link to={{ pathname: "/welcome" }}>Welcome page</Link> // replace URI\n\nconst match = useMatchParams();\n<Link to={{ pathname: match.url + "/welcome" }}>Welcome page</Link>\n\n<Link to={{ pathname: "/welcome", search: "userid=2" }}>Welcome page</Link>\n\n\n\nconst history = useHistory();\n\nconst onClickHandler = () => history.push({ search: "sort=true" });\n\nconst onClickHandler = () => history.push({ pathname: "/welcome", search: "sort=true" });\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/react-router-demo/commit/d1504734fdce1b56f5451510aff8798f6ab2af5b"},"Demo example"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/react-router-practice/commit/dab486262673816e4a4779b715e82f96a1ecd2a8"},"Concrete example")),(0,r.kt)("h2",{id:"note"},"Note"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When creating paths using ",(0,r.kt)("inlineCode",{parentName:"li"},"useRouteMatch().url")," and remaining path, ",(0,r.kt)("inlineCode",{parentName:"li"},'"/"')," must be added in between."),(0,r.kt)("li",{parentName:"ol"},"While specifying route as object, the ",(0,r.kt)("inlineCode",{parentName:"li"},"pathname")," still needs a prefix ",(0,r.kt)("inlineCode",{parentName:"li"},"/"),". But having a ",(0,r.kt)("inlineCode",{parentName:"li"},"?")," for query params is optional (has no effect)."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"useRouteMatch()")," also has the dynamic URL skeleton used by the parent, as well as the actual URL (which we have used), the dynamic path params object and also a boolean called ",(0,r.kt)("inlineCode",{parentName:"li"},"isExact"),' to know if the parent had been matched "exactly" (',(0,r.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/react-router-demo/commit/b673946f50d8b2de846c0cd72fd39a86db68c39a"},"code"),").")))}m.isMDXComponent=!0}}]);