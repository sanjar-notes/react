"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[7276],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(9496);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(r),h=s,d=p["".concat(l,".").concat(h)]||p[h]||_[h]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,i=new Array(o);i[0]=h;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:s,i[1]=a;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},2808:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>_,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=r(1163),s=(r(9496),r(9613));const o={},i="391. Grouping tests together with test suites",a={unversionedId:"home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Grouping_tests_together_with_test_suites",id:"home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Grouping_tests_together_with_test_suites",title:"391. Grouping tests together with test suites",description:"Created Thursday 5 January 2023",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps/391_Grouping_tests_together_with_test_suites.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps",slug:"/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Grouping_tests_together_with_test_suites",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Grouping_tests_together_with_test_suites",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps/391_Grouping_tests_together_with_test_suites.md",tags:[],version:"current",sidebarPosition:391,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"390. Writing our first test",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Writing_our_first_test"},next:{title:"392. Testing user interaction and state",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_user_interaction_and_state"}},l={},c=[{value:"Why",id:"why",level:2},{value:"How",id:"how",level:2},{value:"What",id:"what",level:2}],u={toc:c},p="wrapper";function _(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"391-grouping-tests-together-with-test-suites"},"391. Grouping tests together with test suites"),(0,s.kt)("p",null,"Created Thursday 5 January 2023"),(0,s.kt)("h2",{id:"why"},"Why"),(0,s.kt)("p",null,"Testing suites are a way to organize tests in a codebase into logical units - e.g. all tests for a feature/component/cases."),(0,s.kt)("h2",{id:"how"},"How"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Nesting, as usual. "),(0,s.kt)("li",{parentName:"ul"},"Multiple files. Keep tests isolated and close to their actual code, as much as possible.")),(0,s.kt)("h2",{id:"what"},"What"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"describe")," function is used to create test suites.\nExample:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"describe('Greeting component', () => {\n    test('renders Hello World! text', () => {\n        const helloElement = screen.getByText('Hello World!');\n        expect(helloElement).toBeInTheDocument();\n    });\n})\n\ndescribe('Greeting component', () => {\n    test('renders Hello World! text', () => {\n        const helloElement = screen.getByText('Hello World!');\n        expect(helloElement).toBeInTheDocument();\n    });\n\n    test('renders Hello World! text', () => {\n        const helloElement = screen.getByText('Hello World!');\n        expect(helloElement).toBeInTheDocument();\n    });\n})\n")),(0,s.kt)("p",null,"Rules"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Both suites/tests can have setup code."),(0,s.kt)("li",{parentName:"ol"},"Only a test can do assertions.\nNesting:"),(0,s.kt)("li",{parentName:"ol"},"A file can have any number of suites/tests."),(0,s.kt)("li",{parentName:"ol"},"A test cannot have suite/test."),(0,s.kt)("li",{parentName:"ol"},"A suite can have ",(0,s.kt)("inlineCode",{parentName:"li"},"test"),"s or other suites.")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Simply said"),", suites are meant to be containers, whereas tests are meant for assertions. That's the intent, but both are allowed to do any other computation like render, inspect."))}_.isMDXComponent=!0}}]);