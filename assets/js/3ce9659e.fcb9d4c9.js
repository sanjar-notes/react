"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[631],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>_});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,_=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(_,a(a({ref:t},u),{},{components:r})):n.createElement(_,a({ref:t},u))}));function _(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2733:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(1163),o=(r(9496),r(9613));const i={},a="343. Continuing with the project",c={unversionedId:"home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/Continuing_with_the_project",id:"home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/Continuing_with_the_project",title:"343. Continuing with the project",description:"Created Sunday 25 December 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/23_Intro_to_Next_js/7_API_Routes/343_Continuing_with_the_project.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/23_Intro_to_Next_js/7_API_Routes",slug:"/home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/Continuing_with_the_project",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/Continuing_with_the_project",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/23_Intro_to_Next_js/7_API_Routes/343_Continuing_with_the_project.md",tags:[],version:"current",sidebarPosition:343,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"342. Working with MongoDB",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/Working_with_MongoDB"},next:{title:"343. More about API routes",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Intro_to_Next_js/API_Routes/More_about_API_routes"}},s={},l=[],u={toc:l},d="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"343-continuing-with-the-project"},"343. Continuing with the project"),(0,o.kt)("p",null,"Created Sunday 25 December 2022"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add UI code to do a HTTP POST call to the server. ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/nextjs-first-realistic-tutorial/commit/23a9c01fd1b17093a81e4708038528fae2f57fb6"},"Code")),(0,o.kt)("li",{parentName:"ul"},"Add code to store data received from client, in the MongoDB instance. For this we need to communicate with the instance. ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/nextjs-first-realistic-tutorial/commit/81f2476549b2d6958641bc45751198ccfe5cb112"},"Code")),(0,o.kt)("li",{parentName:"ul"},"Add code to ",(0,o.kt)("inlineCode",{parentName:"li"},"/pages/index.js")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticProps")," to fetch meetups. Note, we don't need to create an API endpoint like ",(0,o.kt)("inlineCode",{parentName:"li"},"api/meetups")," and the call it from the client side code. It will work fine, but it has several issues - why are we making a server call for something that should come pre-rendered. Also, it makes no sense to call the endpoint from ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticProps")," either, since we are already at the server - why call our-self (server)! ?"),(0,o.kt)("li",{parentName:"ul"},"We get an error - we can only return JSON serializable data as props, from ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticProps"),". The source of the error is the ",(0,o.kt)("inlineCode",{parentName:"li"},"_id")," attribute contained in each element of returned meetup array, whose value is not JSON serializable. To solve this, convert it to a string (",(0,o.kt)("inlineCode",{parentName:"li"},".toString"),") before returning from ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticProps"),". ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/nextjs-first-realistic-tutorial/commit/4f57ec46ed6ad4dd7d52554b7b906262d333b7c1"},"Code")),(0,o.kt)("li",{parentName:"ul"},"In the details page. Fetch all meetup ids to be used in ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticPaths"),". ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/nextjs-first-realistic-tutorial/commit/9394e8ea8a148e583090a8d2873e249fe07fb5a6"},"Code")),(0,o.kt)("li",{parentName:"ul"},"Add code to get the meetup details for the current path (during static generation) in ",(0,o.kt)("inlineCode",{parentName:"li"},"getStaticProps"),". For this, we use the ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"findOne"))," function (provided by MongoDB) and pass the ",(0,o.kt)("inlineCode",{parentName:"li"},"_id")," criteria with value first converted into the required format using the ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"ObjectId")),' function (provided by MongoDB). We needed this conversion since we were stored and worked with the "',"_",'id" as a string. ',(0,o.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/nextjs-first-realistic-tutorial/commit/cbf7ccab55aa8ffab69b653d569bf4cd283d437b"},"Code"))))}p.isMDXComponent=!0}}]);