"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[1752],{9613:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},l),{},{components:r})):n.createElement(h,i({ref:t},l))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5288:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(1163),a=(r(9496),r(9613));const o={},i="228. Redux vs React Context",s={unversionedId:"home/resource_itineraries/React_the_complete_guide/Redux/Redux_vs_React_Context",id:"home/resource_itineraries/React_the_complete_guide/Redux/Redux_vs_React_Context",title:"228. Redux vs React Context",description:"Created Wednesday 27 July 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/18_Redux/228_Redux_vs_React_Context.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/18_Redux",slug:"/home/resource_itineraries/React_the_complete_guide/Redux/Redux_vs_React_Context",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/Redux_vs_React_Context",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/18_Redux/228_Redux_vs_React_Context.md",tags:[],version:"current",sidebarPosition:228,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"227. Another look at state in React apps",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/Another_look_at_state_in_React_apps"},next:{title:"229. How Redux works",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/How_Redux_works"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"228-redux-vs-react-context"},"228. Redux vs React Context"),(0,a.kt)("p",null,"Created Wednesday 27 July 2022"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Both React Context and Redux help avoid prop-drilling for cross-component and app-wide state. Why use Redux then?")),(0,a.kt)("p",null,"React Context has some ",(0,a.kt)("em",{parentName:"p"},"potential")," disadvantages, like:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Complexity:"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"React Context can lead to complex code, for larger applications.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"React Context providers need to nested within one another for UI components, which looks bad. Example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"    return (\n        <AuthContextProvider>\n            <ThemeContextProvider>\n                <UIInteractionContextProvider>\n                    <MultiStepFormContextProvider>\n                        <UserRegistration />\n                    </MultiStepFormContextProvider>\n                </UIInteractionContextProvider>\n            </ThemeContextProvider>\n        </AuthContextProvider>\n);\n")),(0,a.kt)("p",{parentName:"li"},"If less contexts are used to avoid this nesting, the provider components get bloated with unrelated data. For example, theme and auth are completely unrelated, but are together in:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function AllContextProvider() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isEvaluatingAuth, setIsEvaluatingAuth] = useState(false);\n  const [activeTheme, setActiveTheme] = useState("default");\n  const [ ... ] = useState(...);\n  \n  function loginHandler(email, password) { };\n  function signupHandler(email, password) { ... };\n  function changeThemeHandler(new Theme) { };\n  \n  return <AllContext.Provider></AllContext.Provider>;\n}\n\n'))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Performance - React Context is OK for low frequency updates like theme, auth change. For high frequency updates, use Redux."),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"My personal summary is that new context is ready to be used for ",(0,a.kt)("em",{parentName:"p"},"low frequency unlikely updates (like locale/theme)"),". It's also good to use it in the same way as old context was used. I.e. for static values and then propagate updates through subscriptions. It's ",(0,a.kt)("em",{parentName:"p"},"not ready")," to be used as a replacement for all Flux-like state propagation. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/issues/14110#issuecomment-448074060"},"Source"))))),(0,a.kt)("p",null,"Note: Both React Context and Redux may be used for different parts of an app, or use just one of them."))}d.isMDXComponent=!0}}]);