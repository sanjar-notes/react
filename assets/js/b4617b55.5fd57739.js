"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[5605],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>_});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,_=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(_,o(o({ref:t},p),{},{components:r})):n.createElement(_,o({ref:t},p))}));function _(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8444:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(1163),a=(r(9496),r(9613));const i={},o="392. Testing user interaction and state",s={unversionedId:"home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_user_interaction_and_state",id:"home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_user_interaction_and_state",title:"392. Testing user interaction and state",description:"Created Saturday 7 January 2023",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps/392_Testing_user_interaction_and_state.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps",slug:"/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_user_interaction_and_state",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_user_interaction_and_state",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/26_Testing_React_Apps/392_Testing_user_interaction_and_state.md",tags:[],version:"current",sidebarPosition:392,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"391. Grouping tests together with test suites",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Grouping_tests_together_with_test_suites"},next:{title:"393. Testing Connected Components",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Testing_React_Apps/Testing_Connected_Components"}},c={},l=[{value:"Interaction",id:"interaction",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"392-testing-user-interaction-and-state"},"392. Testing user interaction and state"),(0,a.kt)("p",null,"Created Saturday 7 January 2023"),(0,a.kt)("p",null,"To test interaction, let's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/4015547edaba1723de41bba4ca255f5c07bcc2a0"},"add")," some state, for realism."),(0,a.kt)("h2",{id:"interaction"},"Interaction"),(0,a.kt)("p",null,"We can interact using the ",(0,a.kt)("inlineCode",{parentName:"p"},"userEvent")," object available as a default import from the ",(0,a.kt)("inlineCode",{parentName:"p"},"@testing-library/user-event")," package."),(0,a.kt)("p",null,"It contains many events - click, scroll etc. The syntax for click is ",(0,a.kt)("inlineCode",{parentName:"p"},"userEvent.click(myButtonElement)"),". FIXME: It's a synchronous operation, here atleast, is this always the case. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/1542ecea9755848f75c31548fb17ac5ae6125d7a"},"Code"),"."),(0,a.kt)("p",null,"Having a stateful component didn't need any special treatment. FIXME: how to observe state?"),(0,a.kt)("p",null,"FIXME: I ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/08c221f7cc39d93f8f82045a80bfc23861cc60d6"},"can")," click the element directly, just like vanilla JS."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Is this discouraged?"),(0,a.kt)("li",{parentName:"ol"},"How is it different from ",(0,a.kt)("inlineCode",{parentName:"li"},"userEvent"),"?"),(0,a.kt)("li",{parentName:"ol"},"Potentially direct actions (like scroll, keyboard) - direct in the sense that they are not focused for a particular element seems easier with ",(0,a.kt)("inlineCode",{parentName:"li"},"userEvent"),", but it be done using ",(0,a.kt)("inlineCode",{parentName:"li"},"document")," element as well - what are the differences?")),(0,a.kt)("p",null,"Some observations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Test for all possibilities - Taking into account all possibilities that make sense is very important. ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/cb458d36c1966488f202984d9336be3b8b4ed448"},"Code")),(0,a.kt)("li",{parentName:"ul"},"There may be multiple matchers which could be used interchangeably for a given scenario. ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/3fbd25bd74e10fb8f92e02a3b9a6cfbf68d7200d"},"Code")),(0,a.kt)("li",{parentName:"ul"},"Use proper (tight) inspectors - when checking for presence, use ",(0,a.kt)("inlineCode",{parentName:"li"},"get")," instead of ",(0,a.kt)("inlineCode",{parentName:"li"},"query"),". Both would give the same result, the ",(0,a.kt)("inlineCode",{parentName:"li"},"get")," is better as it'll raise an error. ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/exemplar-codes/testing-react-apps-first-tutorial/commit/4ab5948505af3b935d1fbc3cb94c773e063aea34"},"Code"),". FIXME: really, why not be silent and not raise errors - the report will mention failure anyway.")))}m.isMDXComponent=!0}}]);