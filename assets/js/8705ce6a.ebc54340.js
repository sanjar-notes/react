"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[3598],{9613:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(a),d=r,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(g,i(i({ref:t},u),{},{components:a})):n.createElement(g,i({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5103:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(1163),r=(a(9496),a(9613));const o={},i="284. Programmatic navigation",l={unversionedId:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Programmatic_navigation",id:"home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Programmatic_navigation",title:"284. Programmatic navigation",description:"Created Sunday 25 September 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/284_Programmatic_navigation.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router",slug:"/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Programmatic_navigation",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Programmatic_navigation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/20_MultiPage_SPA_React_Router/284_Programmatic_navigation.md",tags:[],version:"current",sidebarPosition:284,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"284. Adding a not found page",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Adding_a_not_found_page"},next:{title:"285. Prompt before navigation",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Prompt_before_navigation"}},c={},s=[{value:"How",id:"how",level:2},{value:"What",id:"what",level:2},{value:"Note",id:"note",level:2}],u={toc:s},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"284-programmatic-navigation"},"284. Programmatic navigation"),(0,r.kt)("p",null,"Created Sunday 25 September 2022"),(0,r.kt)("p",null,"Also known as imperative navigation."),(0,r.kt)("h1",{id:"why"},"Why"),(0,r.kt)("p",null,"Navigate when a button is clicked. Or more generally, navigate programmatically."),(0,r.kt)("h2",{id:"how"},"How"),(0,r.kt)("p",null,"Simple, use the native History API.\nBut it'll be helpful if React Router instance knows about such navigation.\nOptionally, save/load/retain some state and run a callback function."),(0,r.kt)("h2",{id:"what"},"What"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"React Router has a ",(0,r.kt)("inlineCode",{parentName:"li"},"useHistory")," hook that returns a 'History' object that's in sync with the router."),(0,r.kt)("li",{parentName:"ul"},"The history object has many useful functions, such as:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"push(newPath)")," - navigates page and pushes the new path as browser history, allowing for the navigation buttons (forward/back) to work. Note: ",(0,r.kt)("inlineCode",{parentName:"li"},"push")," has nothing to do with appending to nested routes."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"replace(newPath)")," - navigates page but doesn't make any changes to the history."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"goForward()")," - programmatically activate the forward navigation button."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"goBack")," - programmatically activate the back navigation button.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useHistory } from 'react-router-dom';\n\nfunction App() {\n  const history = useHistory();\n  \n  const onClickHandler = () => history.push(\"/welcome/bingo\");\n  \n  return (\n    <button onClick={onClickHandler}>Click me</button>\n  );\n}\n")),(0,r.kt)("h2",{id:"note"},"Note"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The page re-renders on navigation, always. Even if the new URL is the same as the current one, or we use ",(0,r.kt)("inlineCode",{parentName:"p"},"history.replace()"),". FIXME(from what level does the re-render happen, from ",(0,r.kt)("inlineCode",{parentName:"p"},"index.js"),"?)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useHistory")," returned object works on the URI alone, not the URL. If you wish to go to an external site, programmatically, use the native JS ",(0,r.kt)("inlineCode",{parentName:"p"},"window.location.replace"),' with "https://" (or "https://" or "ftp://" etc) as string prefix.\nExample:'),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const onClickHandler = () => window.location.replace("https://google.com"); // works\n\nconst onClickHandler = () => window.location.replace("google.com"); // won\'t work, will change URI only\n')),(0,r.kt)("p",{parentName:"li"},'Reason: Navigating to an external site will ALWAYS reload the page, and thus, React Router has got nothing to (and cannot) do with such "external" navigation.'))))}m.isMDXComponent=!0}}]);