"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[4210],{9613:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=u(n),h=a,m=l["".concat(s,".").concat(h)]||l[h]||p[h]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(1163),a=(n(9496),n(9613));const o={},i="251. Redux and side-effects",c={unversionedId:"home/resource_itineraries/React_the_complete_guide/Advanced_Redux_INCOMPLETE/Redux_and_side_effects",id:"home/resource_itineraries/React_the_complete_guide/Advanced_Redux_INCOMPLETE/Redux_and_side_effects",title:"251. Redux and side-effects",description:"Created Friday 19 August 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/19_Advanced_Redux_INCOMPLETE/251_Redux_and_side_effects.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/19_Advanced_Redux_INCOMPLETE",slug:"/home/resource_itineraries/React_the_complete_guide/Advanced_Redux_INCOMPLETE/Redux_and_side_effects",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Advanced_Redux_INCOMPLETE/Redux_and_side_effects",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/19_Advanced_Redux_INCOMPLETE/251_Redux_and_side_effects.md",tags:[],version:"current",sidebarPosition:251,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"251. Module Introduction",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Advanced_Redux_INCOMPLETE/Module_Introduction"},next:{title:"266. Module Introduction",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/MultiPage_SPA_React_Router/Module_Introduction"}},s={},u=[{value:"Situation",id:"situation",level:3},{value:"Action Creator architecture",id:"action-creator-architecture",level:3},{value:"Thunk architecture in Redux",id:"thunk-architecture-in-redux",level:3}],d={toc:u},l="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"251-redux-and-side-effects"},"251. Redux and side-effects"),(0,a.kt)("p",null,"Created Friday 19 August 2022"),(0,a.kt)("h3",{id:"situation"},"Situation"),(0,a.kt)("p",null,"An app certainly has asynchronous and side-effect code. Redux, on the other hand, has a core principle regarding ",(0,a.kt)("em",{parentName:"p"},"reducers")," - Reducers must be pure, side-effect free and synchronous functions."),(0,a.kt)("p",null,"FIXME - why should reducers be pure in Redux? Maybe to allow for time travel debugging."),(0,a.kt)("p",null,"This, of course, does not mean that we cannot work with Redux in code involving non-pure operations. It's just that ",(0,a.kt)("em",{parentName:"p"},"reducers")," constrained to be pure. So there are two ways to work with Redux with non-pure code:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},'Run dispatch as needed, inside non-pure code too. Absolutely OK. Code, if used often, is somewhat "all over the place".'),(0,a.kt)("li",{parentName:"ol"},'Create an "action creator", which can be an impure function but returns an action object which can be used for dispatch. This "hack" is called a "thunk action creator" in the Redux community. Redux has provisions for making thunk action creators and provides the function with necessary Redux functions like ',(0,a.kt)("inlineCode",{parentName:"li"},"dispatch"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"getState"),", by using ",(0,a.kt)("inlineCode",{parentName:"li"},"redux-thunk")," middleware package.")),(0,a.kt)("h3",{id:"action-creator-architecture"},"Action Creator architecture"),(0,a.kt)("p",null,"Action creator, in it's simplest form, is something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function MyActionCreator(payload) {\n    return { type: 'MY_STRING', payload };\n}\n")),(0,a.kt)("p",null,"This is fine for avoiding extra string code, and is used."),(0,a.kt)("p",null,'But the popular definition of "action-creator" is not that of a function that ',(0,a.kt)("em",{parentName:"p"},"merely"),' "returns an action". So what is it then? Let\'s see.'),(0,a.kt)("p",null,"An action creator that has side-effects but everything is synchronous, will look like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import store from './path';\n\nfunction MyActionCreator(payload, config) {\n    doSomething...;\n        \n    store.dispatch(...);\n    ...\n    store.dispatch(...);\n    ...\n    store.getState();\n\n    return {type: 'MY_STRING', payload};\n}\n")),(0,a.kt)("p",null,"This is fine."),(0,a.kt)("p",null,"But what about an action creator that must run async operations.\nLet's try:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import store from './path';\n\nfunction MyActionCreator(dispatch, getState, payload) {\n\n    (async function() {\n        await doSomething...;\n            \n        store.dispatch(...);\n        ...\n        store.dispatch(...);\n        ...\n        store.getState();\n    })();\n    \n    return {type: 'MY_STRING', payload};\n}\n")),(0,a.kt)("p",null,"Would this work? No. We will return before the computation of the async function ends. Observed carefully, it is impossible in JS to return a value from a function after doing async ops. At best, you can return a promise with a return value."),(0,a.kt)("p",null,"Now, the action creator was an async function itself (i.e. it returned a promise with the action value), we would need to change the Redux API to something like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import store from './path';\n\nmyActionCreator().then(action => store.dispatch(action));\n")),(0,a.kt)("p",null,"But this is the same as using store between async functions, which we can do already (the first option). This also makes action creators of two types - synchronous and asynchronous ones. This is resolved by the architecture Thunk architecture Redux uses."),(0,a.kt)("h3",{id:"thunk-architecture-in-redux"},"Thunk architecture in Redux"),(0,a.kt)("p",null,"So what's the architecture of thunks?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Redux solves the problem of two kinds of action creator (thunks) by mandating that all thunks be ",(0,a.kt)("em",{parentName:"li"},"synchronous")," (but may run side-effects)."),(0,a.kt)("li",{parentName:"ul"},"Instead of returning an action object, thunk creators return a callback function (the thunk) which either returns an action object or a promise that does.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Creating the thunk\nfunction myThunkCreator(payload) {\n    return () => {type: 'MY_STRING', payload};\n}\n\nfunction myAsyncThunkCreator(payload) {\n    return async () => { \n            ...; \n            ...; \n            return {type: 'MY_STRING', payload}\n        };\n}\n\nimport store from '../path';\n// using the thunk - Note, we need to call(()) the thunk\nstore.dispatch(myThunkCreator());\nstore.dispatch(myAsyncThunkCreator());\n\n// BOTH have same structure - return a function (which can be async)\n")),(0,a.kt)("p",null,"Additionally, Redux provides ",(0,a.kt)("inlineCode",{parentName:"p"},"dispatch, getState")," to thunks, so they may run multiple dispatches. All in all, the thunk syntax is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function myThunkCreator(thunkArg) {\n    return [async] function ({dispatch, getState}) {\n            \n        }\n}\n")),(0,a.kt)("p",null,"FIXME: this is incomplete, and has errors."))}p.isMDXComponent=!0}}]);