"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[3233],{9613:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),d=i,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||o;return n?a.createElement(m,r(r({ref:t},s),{},{components:n})):a.createElement(m,r({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[f]="string"==typeof e?e:i,r[1]=c;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=n(1163),i=(n(9496),n(9613));const o={},r="114. useEffect cleanup function",c={unversionedId:"vault/Lifecycle_and_hooks/3_1_useEffect_cleanup_function",id:"vault/Lifecycle_and_hooks/3_1_useEffect_cleanup_function",title:"114. useEffect cleanup function",description:"Created Tuesday 08 March 2022",source:"@site/docs/vault/5_Lifecycle_and_hooks/3_1_useEffect_cleanup_function.md",sourceDirName:"vault/5_Lifecycle_and_hooks",slug:"/vault/Lifecycle_and_hooks/3_1_useEffect_cleanup_function",permalink:"/reactjs-notes/docs/vault/Lifecycle_and_hooks/3_1_useEffect_cleanup_function",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vault/5_Lifecycle_and_hooks/3_1_useEffect_cleanup_function.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.2. Deriving all hooks from lifecycle",permalink:"/reactjs-notes/docs/vault/Lifecycle_and_hooks/2_2_Deriving_all_hooks_from_lifecycle"},next:{title:"1. Routing",permalink:"/reactjs-notes/docs/vault/More_aspects_of_React/Routing"}},l={},u=[{value:"Why",id:"why",level:3},{value:"How",id:"how",level:3},{value:"What",id:"what",level:3},{value:"Example of cleanup function",id:"example-of-cleanup-function",level:4}],s={toc:u},f="wrapper";function p(e){let{components:t,...o}=e;return(0,i.kt)(f,(0,a.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"114-useeffect-cleanup-function"},"114. useEffect cleanup function"),(0,i.kt)("p",null,"Created Tuesday 08 March 2022"),(0,i.kt)("h3",{id:"why"},"Why"),(0,i.kt)("p",null,"Situation: The useEffect function may create eventListeners, or timeouts. Of course, we want only the latest ones, to avoid a cascading effect from old eventListeners, timeouts."),(0,i.kt)("p",null,"So, the cleanup code should be associated with ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect"),", and run ",(0,i.kt)("strong",{parentName:"p"},"before")," every ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect")," function call, except the first execution (after 1st render)."),(0,i.kt)("p",null,'This "cleanup" function can be specified as a callback from the function in ',(0,i.kt)("inlineCode",{parentName:"p"},"useEffect"),"."),(0,i.kt)("h3",{id:"how"},"How"),(0,i.kt)("p",null,"The cleanup function is run:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"After each ",(0,i.kt)("inlineCode",{parentName:"li"},"useEffect")," function execution."),(0,i.kt)("li",{parentName:"ol"},"Except the first ",(0,i.kt)("inlineCode",{parentName:"li"},"useEffect")," function execution. Here, the cleanup is not run before."),(0,i.kt)("li",{parentName:"ol"},"After the component has been unmounted from the DOM.")),(0,i.kt)("p",null,"So for ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," re-renders, the:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useEffect")," runs 1 (on first render) + ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," times."),(0,i.kt)("li",{parentName:"ul"},"The cleanup runs ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," + 1 (1 after unmount) times.")),(0,i.kt)("h3",{id:"what"},"What"),(0,i.kt)("p",null,"The cleanup function is meant to just have logic to avoid a cascading effect of the side-effect, as pointed out earlier."),(0,i.kt)("h4",{id:"example-of-cleanup-function"},"Example of cleanup function"),(0,i.kt)("p",null,"Suppose we have a text ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," field, and we wish to check if the text exists in the backend or not. We will use ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect"),', because sending an HTTP request is a "side-effect". This is functionally OK. But if we do this on every ',(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," of the field, it will be a lot of backend requests."),(0,i.kt)("p",null,"To avoid this, we can actually wait for some time after the user has stopped (finished) typing in the text field. So we use a ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," function. This will create a timeout before sending the HTTP request."),(0,i.kt)("p",null,"But again, as the ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout")," is set for each keystroke, but never removed, we'll have a cascading (repeating) effect from the enqueued ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout"),"s. The solution is to remove the timeouts after each render, and set a new Timeout. This is perfect for the ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect"),", as the cleanup is run before the ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect")," function runs. The code would look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import {useEffect} from 'react';\n\nfunction MyComponent() {\n    ...\n    useEffect(() => {\n        const timeoutVar = setTimeout(\n            () => {\n                ... // check HTTP request and validate\n            };\n\n        return (() => { // cleanup function\n            clearTimeout(timeOutVar);\n        })\n            , 400);\n    }, [enteredField]);\n    ...\n};\n")),(0,i.kt)("p",null,"See this\n",(0,i.kt)("img",{src:n(3462).Z,width:"882",height:"692"}),"\nHere the timeouts will be set and unset when the user is typing, and finally one will be run if the user stops typing. This reduces network calls, and when they have typed successfully, a request is sent."),(0,i.kt)("p",null,"This way of validating typed input is called \"de-bouncing\". An example where this is used - GitHub new repo name does not exist tick mark, Gmail new username 'taken' validation."))}p.isMDXComponent=!0},3462:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/114_useEffect_cleanup_function-image-1-dd0c5d6245601e4abd13021706593aff.gif"}}]);