"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[4230],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(y,l(l({ref:t},p),{},{components:n})):r.createElement(y,l({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1848:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(1163),o=(n(9496),n(9613));const a={},l="5. Styled components",s={unversionedId:"vault/styling,_props,_children/Styles in React/Styled_components",id:"vault/styling,_props,_children/Styles in React/Styled_components",title:"5. Styled components",description:"Created Sunday 13 February 2022",source:"@site/docs/vault/3_styling,_props,_children/2_Styles in React/5_Styled_components.md",sourceDirName:"vault/3_styling,_props,_children/2_Styles in React",slug:"/vault/styling,_props,_children/Styles in React/Styled_components",permalink:"/docs/vault/styling,_props,_children/Styles in React/Styled_components",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vault/3_styling,_props,_children/2_Styles in React/5_Styled_components.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4. CSS modules",permalink:"/docs/vault/styling,_props,_children/Styles in React/CSS_modules"},next:{title:"2. Wrapper components",permalink:"/docs/vault/styling,_props,_children/Wrapper_components"}},i={},c=[{value:"Why",id:"why",level:3},{value:"How",id:"how",level:3},{value:"What",id:"what",level:3},{value:"About styled components",id:"about-styled-components",level:4}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"5-styled-components"},"5. Styled components"),(0,o.kt)("p",null,"Created Sunday 13 February 2022"),(0,o.kt)("h3",{id:"why"},"Why"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For very large projects, where many people work together, class and CSS code can clash, because it's applicable globally - for CSS files that are imported."),(0,o.kt)("li",{parentName:"ul"},"Basically, we need a way to scope styles to the component only, so that it doesn't affect any other component. This is achieved using styled components.")),(0,o.kt)("h3",{id:"how"},"How"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Styles for a component are defined inside the component file. We don't import CSS files as we have done previously."),(0,o.kt)("li",{parentName:"ul"},"HTML tags are inherited from ",(0,o.kt)("a",{parentName:"li",href:"https://styled-components.com/"},"the library")," and styles are provided for them, if needed. These inherited tags are stored in variables, which are then used instead of the primitive tags."),(0,o.kt)("li",{parentName:"ul"},"When the project is built and assets are generated, the classname are hashed, so that they don't class. This makes the final HTML classes cryptic, but it's fine.")),(0,o.kt)("h3",{id:"what"},"What"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Dependency"),": We need the ",(0,o.kt)("inlineCode",{parentName:"p"},"styled-components")," package installed. Install it in the project using ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install --save styled-components"),"."),(0,o.kt)("p",null,"Steps to use ",(0,o.kt)("inlineCode",{parentName:"p"},"styled-components"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Import ",(0,o.kt)("inlineCode",{parentName:"li"},"styled")," object from the ",(0,o.kt)("inlineCode",{parentName:"li"},"styled-components")," library, like so:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import styled from 'styled-components';\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Specify the styles for each tag inside the file. Provide a name for each tag. As the tag is already selected, there's no need for a selector/class. Of course, pseudo-selectors can be specified, using ",(0,o.kt)("inlineCode",{parentName:"li"},"&"),". Directly specify the styles for tags like so:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const Div = styled.div`\n    color: red;\n    background-color: salmon;\n\n    &:hover\n    {\n        color: black;\n    }\n`\n\n// now use <Div></Div> instead of <div></div> here.\n")),(0,o.kt)("h4",{id:"about-styled-components"},"About styled components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Props on styled components are passed down as is to the HTML elements, so ",(0,o.kt)("inlineCode",{parentName:"li"},"onClick")," and other attributes work normally.")))}u.isMDXComponent=!0}}]);