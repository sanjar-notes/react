"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[9548],{9613:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(a),d=r,m=h["".concat(c,".").concat(d)]||h[d]||p[d]||o;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[h]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6833:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(1163),r=(a(9496),a(9613));const o={},i="302. What, How and Why?",s={unversionedId:"home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/What_How_and_Why",id:"home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/What_How_and_Why",title:"302. What, How and Why?",description:"Created Monday 31 October 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/22_Adding_authentication_to_React_apps/302_What_How_and_Why.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/22_Adding_authentication_to_React_apps",slug:"/home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/What_How_and_Why",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/What_How_and_Why",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/22_Adding_authentication_to_React_apps/302_What_How_and_Why.md",tags:[],version:"current",sidebarPosition:302,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"301. Module introduction",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/Module_introduction"},next:{title:"303. Adding user sign up",permalink:"/reactjs-notes/docs/home/resource_itineraries/React_the_complete_guide/Adding_authentication_to_React_apps/Adding_user_signup"}},c={},l=[{value:"Why",id:"why",level:2},{value:"What",id:"what",level:2},{value:"How",id:"how",level:2},{value:"Implementation approaches for web authentication",id:"implementation-approaches-for-web-authentication",level:2},{value:"Comparison",id:"comparison",level:3},{value:"Vulnerability",id:"vulnerability",level:3}],u={toc:l},h="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"302-what-how-and-why"},"302. What, How and Why?"),(0,r.kt)("p",null,"Created Monday 31 October 2022"),(0,r.kt)("h2",{id:"why"},"Why"),(0,r.kt)("p",null,"Security"),(0,r.kt)("h2",{id:"what"},"What"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Authentication just means signup/login."),(0,r.kt)("li",{parentName:"ul"},"Technically, authentication is a way to restrict access to resources. "),(0,r.kt)("li",{parentName:"ul"},"In web apps, it's used to restrict access to pages (via links) or data (via API requests to our server).\nExample - email login, bank account login, or any other login for that matter.")),(0,r.kt)("h2",{id:"how"},"How"),(0,r.kt)("p",null,"Assuming we have our user account already made, the authentication process is simple:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Login - send login ",(0,r.kt)("em",{parentName:"li"},"credentials")," which the server can verify. If we provide correct credentials, we get some unique ",(0,r.kt)("em",{parentName:"li"},"data")," generated by the server."),(0,r.kt)("li",{parentName:"ol"},'Access - this "data" (from step 1) is added to all subsequent requests to the server, in order to access protected content.')),(0,r.kt)("p",null,"Note that from an app functionality point of view, the only thing that matters is ",(0,r.kt)("em",{parentName:"p"},"access"),' (step 2 with or without "data"). But if step 2 doesn\'t have "data", it could be by anyone, which is not secure. Step 1 (login) establishes security of step 2 (access).'),(0,r.kt)("h2",{id:"implementation-approaches-for-web-authentication"},"Implementation approaches for web authentication"),(0,r.kt)("p",null,"Two approaches are:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Server-side sessions"),' - on login, i.e. successful credential verification of a client, the server generates, stores and sends back a "session data" to the client. This "data" is sent (along with the request payload) by the client and verified (basic equality check) by the server for all subsequent requests. The server may regenerate this "session data" at any time, but this doesn\'t affect the flow at all.'),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Authentication tokens"),' - uses authentication property of asymmetric encryption. On login, i.e. successful credential verification of a client, the server generates and sends back a "token" to the client. BUT, it does not store the "token". This "token" is sent (along with the request payload) by the client and verified (using ~public private key match) by the server for all subsequent requests. The server may regenerate this "token" at any time, but this doesn\'t affect the flow at all.')),(0,r.kt)("p",null,"1 is suitable if all requests (SPA/pages, content, data) are made to the same server. But if an app uses multiple servers (decoupled backend), then it's not so suitable (Why?? the client can have multiple server-side tokens, one for each server)."),(0,r.kt)("p",null,"What to do - all backend services should be decoupled from each other (WTF? That's what I wrote above!)"),(0,r.kt)("p",null,"FIXME: server-side sessions and authentication tokens use equality(symmetric) and asymmetric encryption for security. They have nothing to do with coupled, decoupled backends! See ",(0,r.kt)("a",{parentName:"p",href:"https://dev.to/thecodearcher/what-really-is-the-difference-between-session-and-token-based-authentication-2o39#:~:text=both%20methods%20can%20be%20used%20interchangeably%20or%20together%20to%20create%20a%20hybrid%20system.%20"},"this"),"."),(0,r.kt)("h3",{id:"comparison"},"Comparison"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=UBUNrFtufWo&ab_channel=Fireship"},"Fireship - Session vs Token Authentication in 100 Seconds")),(0,r.kt)("li",{parentName:"ul"},"Session approach will need the server to be stateful (i.e. store session files), while tokens don't have any server overhead (storage)."),(0,r.kt)("li",{parentName:"ul"},"Session approach allows for individually (based on user info) set session parameters, while tokens are more general.")),(0,r.kt)("h3",{id:"vulnerability"},"Vulnerability"),(0,r.kt)("p",null,'An attacker can easily impersonate a legitimate user stealing the "session data/auth token", or in CSRF, XSS attacks. Sessions are protected from CSRF by most frontend libraries/frameworks.'))}p.isMDXComponent=!0}}]);