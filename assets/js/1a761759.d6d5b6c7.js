"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[6764],{9613:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var o=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),l=c(n),d=a,h=l["".concat(i,".").concat(d)]||l[d]||u[d]||r;return n?o.createElement(h,s(s({ref:t},m),{},{components:n})):o.createElement(h,s({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[l]="string"==typeof e?e:a,s[1]=p;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=n(1163),a=(n(9496),n(9613));const r={},s="237. Redux with React for class components",p={unversionedId:"home/resource_itineraries/React_the_complete_guide/Redux/Redux_with_React_for_class_components",id:"home/resource_itineraries/React_the_complete_guide/Redux/Redux_with_React_for_class_components",title:"237. Redux with React for class components",description:"Created Saturday 30 July 2022",source:"@site/docs/home/4_resource_itineraries/2_React_the_complete_guide/18_Redux/237_Redux_with_React_for_class_components.md",sourceDirName:"home/4_resource_itineraries/2_React_the_complete_guide/18_Redux",slug:"/home/resource_itineraries/React_the_complete_guide/Redux/Redux_with_React_for_class_components",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/Redux_with_React_for_class_components",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/home/4_resource_itineraries/2_React_the_complete_guide/18_Redux/237_Redux_with_React_for_class_components.md",tags:[],version:"current",sidebarPosition:237,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"231. Redux with React",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/Redux_with_React"},next:{title:"241. Redux challenges and Introducing Redux Toolkit",permalink:"/docs/home/resource_itineraries/React_the_complete_guide/Redux/Redux_challenges_and_Introducing_Redux_Toolkit"}},i={},c=[{value:"Questions",id:"questions",level:3}],m={toc:c},l="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"237-redux-with-react-for-class-components"},"237. Redux with React for class components"),(0,a.kt)("p",null,"Created Saturday 30 July 2022"),(0,a.kt)("p",null,"There are 5 things when using ",(0,a.kt)("inlineCode",{parentName:"p"},"redux")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"react-redux"),":"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Store")," - creation is same as with functional components.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Provider")," - same as with functional components.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Consuming"),' data from store, for class components - all data to be consumed is provided through props. We have to define a function, by convention called "',(0,a.kt)("em",{parentName:"p"},"mapStateToProps"),'" which takes in the store state as argument and must return an object of to-be-props pointing to relevant parts of the store state. This object will be added to existing props of the component. Example:'),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function mapStateToProps(state) {\n    return { count: state.count, showCount: state.showCount };\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Dispatching"),' store changes in class components - this is also done by adding functions to props. One needs to define a function, by convention called "',(0,a.kt)("em",{parentName:"p"},"mapDispatchToProps"),"\" which provides the dispatch function of the store as it's first argument. We must return an object of to-be-added-props which help in mutating the store. There are two ways to do this - pass the dispatch function itself as a prop, or create functions which call the dispatch function, and are called from inside the component. Example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function mapDispatchToProps(dispatch) {\n    return { \n        incrementHandler: () => dispatch({type: 'INCREMENT'}),\n        toggleCountHandler: () => dispatch({type: 'TOGGLE'})\n    };\n}\n\n// OR\n\nfunction mapDispatchToProps(dispatch) {\n    return { dispatch };\n}\n\nclass MyComponent extends React.Component {\n    incrementHandler() {\n        this.props.dispatch('INCREMENT');\n    }\n    \n    toggleCountHandler() {\n        this.props.dispatch('TOGGLE');\n    }\n    render(){ /*  */}\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Connecting")," the consumption and dispatch functions to the component. This is done by the ",(0,a.kt)("inlineCode",{parentName:"p"},"react-redux.connect"),' function. It is a function that takes in the "',(0,a.kt)("em",{parentName:"p"},"mapStateToProps"),'" and "',(0,a.kt)("em",{parentName:"p"},"mapDispatchToProps"),'" functions as arguments and return s an HOC function that takes the React component as argument, and returns the component with the props attached. See:'),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import {connect} from 'react-redux';\n\nclass MyComponent from React.Component {\n}\n\nfunction mapStateToProps() {}\nfunction mapDispatchToProps() {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyComponent);\n")))),(0,a.kt)("p",null,"Subscriptions to components are automatically managed(i.e. added on component mount and remove on component dismount) by ",(0,a.kt)("inlineCode",{parentName:"p"},"react-redux"),". In short, any change in the store will re-render relevant components in the UI sub-tree."),(0,a.kt)("p",null,"Note: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In both ",(0,a.kt)("em",{parentName:"p"},"mapStateToProps")," and ",(0,a.kt)("em",{parentName:"p"},"mapDispatchToProps"),", we only have to return an object of props to be added. Existing props are merged with this object.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Both ",(0,a.kt)("em",{parentName:"p"},"mapStateToProps")," and ",(0,a.kt)("em",{parentName:"p"},"mapDispatchToProps")," have latest (really?, FIXME) props available to them as the second parameter. i.e.:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function mapStateToProps(state, props) { return {}; }\nfunction mapDispatchToProps(state, props) { return {}; \n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"connect")," works for functional components too. So this way of consuming and dispatching may be used by functional components too. This works because the a functional or class component, is essentially the same and ",(0,a.kt)("inlineCode",{parentName:"p"},"connect")," doesn't care. So, this, works too:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import {connect} from 'react-redux';\n\nfunction MyComponent(props) {\n}\n\nfunction mapStateToProps() {}\nfunction mapDispatchToProps() {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyComponent);\n")),(0,a.kt)("p",{parentName:"li"},"This way is sometimes preferred because it separates real props from store props."))),(0,a.kt)("h3",{id:"questions"},"Questions"),(0,a.kt)("p",null,"How to access the correct state and dispatch function if there are multiple providers in the UI ancestor? Neither ",(0,a.kt)("inlineCode",{parentName:"p"},"mapStateToProps")," nor ",(0,a.kt)("inlineCode",{parentName:"p"},"mapDispatchToProps")," take a store as argument. I have observed that the innermost provider is chosen as the store state."))}u.isMDXComponent=!0}}]);