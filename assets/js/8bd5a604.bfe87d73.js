"use strict";(self.webpackChunkreactjs_notes_docu=self.webpackChunkreactjs_notes_docu||[]).push([[6652],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),i=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=i(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=i(t),m=o,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(h,l(l({ref:n},c),{},{components:t})):r.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2737:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=t(1163),o=(t(9496),t(9613));const a={},l="2. Wrapper components",s={unversionedId:"vault/styling,_props,_children/Wrapper_components",id:"vault/styling,_props,_children/Wrapper_components",title:"2. Wrapper components",description:"Created Friday 21 January 2022",source:"@site/docs/vault/3_styling,_props,_children/3_Wrapper_components.md",sourceDirName:"vault/3_styling,_props,_children",slug:"/vault/styling,_props,_children/Wrapper_components",permalink:"/docs/vault/styling,_props,_children/Wrapper_components",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vault/3_styling,_props,_children/3_Wrapper_components.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"5. Styled components",permalink:"/docs/vault/styling,_props,_children/Styles in React/Styled_components"},next:{title:"4. PropTypes and defaultProps",permalink:"/docs/vault/styling,_props,_children/1_1_PropTypes_and_defaultProps"}},p={},i=[{value:"Why",id:"why",level:4},{value:"How",id:"how",level:4},{value:"What",id:"what",level:4},{value:"What about styles on wrappers/components in general?",id:"what-about-styles-on-wrapperscomponents-in-general",level:6},{value:"What about outer styles?",id:"what-about-outer-styles",level:6}],c={toc:i},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2-wrapper-components"},"2. Wrapper components"),(0,o.kt)("p",null,"Created Friday 21 January 2022"),(0,o.kt)("h4",{id:"why"},"Why"),(0,o.kt)("p",null,"Suppose we have a component that has a variable component inside it, so that we can render components inside this 'wrapper' component."),(0,o.kt)("p",null,"This saves us a lot of duplication, like so."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Approach A: Don't use wrapper components. For the whole thing, we'd have to copy all the outer-code for the component and then place the target component inside. This has to be done for each instance of \"wrapper + core\". This references N + 1 files."),(0,o.kt)("li",{parentName:"ol"},"Approach B: We create a component with a variable 'hole' in it. We then just specify the whole to be the target container.  This references just 2 files.")),(0,o.kt)("p",null,"This is why React allows us to create wrapper components, to enhance DRY (don't repeat yourself)."),(0,o.kt)("h4",{id:"how"},"How"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Everything inside a component is actually stored in props, even children and style classes."),(0,o.kt)("li",{parentName:"ul"},"Style classes are not applicable directly on components, unless a change is made inside to include styles inside (by having a concatenated string of classes). Example: ",(0,o.kt)("inlineCode",{parentName:"li"},'<XYZComponent className="color-2-4" />')," is not valid code. But it can be made so.")),(0,o.kt)("h4",{id:"what"},"What"),(0,o.kt)("p",null,"Three useful wrapper properties are ",(0,o.kt)("strong",{parentName:"p"},"named")," this:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Children - ",(0,o.kt)("inlineCode",{parentName:"li"},"children"),", this is an object."),(0,o.kt)("li",{parentName:"ol"},"CSS Classes - ",(0,o.kt)("inlineCode",{parentName:"li"},"className"),", it's a string actually. Wrappers may just styles."),(0,o.kt)("li",{parentName:"ol"},"Styles - ",(0,o.kt)("inlineCode",{parentName:"li"},"style"),", an object.\nThis makes making wrapper components very easy.")),(0,o.kt)("p",null,"Code for wrapper component. There's no change in the core component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JSX"},"function WrapperComponent(props) {\n    return (<div>\n                ...\n                {props.children /*Core component placed here*/}\n                <div>\n                ...\n                </div>\n                ...\n            </div>)\n}\n\nfunction CoreComponent() {\n    return ...;\n}\n")),(0,o.kt)("p",null,"Rendering core in wrapper"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JSX"},"function WholeComponent {\n    return (<WrapperComponent> <CoreComponent/> </WrapperComponent>);\n}\n")),(0,o.kt)("p",null,"As it is a wrapper, we now have a closing tag as opposed to non-wrapper components (which are non-closing tags)."),(0,o.kt)("h6",{id:"what-about-styles-on-wrapperscomponents-in-general"},"What about styles on wrappers/components in general?"),(0,o.kt)("p",null,"Just change the ",(0,o.kt)("inlineCode",{parentName:"p"},"className")," string inside the component, like so."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JSX"},"function OuterComponent {\n    return (<div className={className}>\n            ...\n            </div>);\n}\n// <OuterComponent className=\"top red solid\"/> would work now\n\n\n//// OR if own style classes\n\nfunction OuterComponent2 {\n    return (<div className={'color1 ' + className}>\n            ...\n            </div>);\n}\n\n// <OuterComponent2 className='solid'/> is actually 'color1 solid'\n")),(0,o.kt)("p",null,"This way classes specified to the component are appended to it, as we wanted."),(0,o.kt)("h6",{id:"what-about-outer-styles"},"What about outer styles?"),(0,o.kt)("p",null,"Like appending, just use the spread operator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JSX"},'function OuterComponent ({style}) {\n    return (<div style={style}>\n            ...\n            </div>);\n}\n\n// <OuterComponent style={{color: "red"}}/> works now\n\n//// OR if it has styles of its own\n\nfunction OuterComponent2 ({style}) {\n    return (<div style={{color: "red", ...style}}>\n            ...\n            </div>);\n}\n\n// <OuterComponent2 style={{fontStyle:"italic"}} /> is actually \n// style={{color: "red", fontStyle:"italic"}}\n')),(0,o.kt)("p",null,"Example: Real use of wrapper component, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/exemplar-codes/expense-tracker-react/commit/b5802c373d094c5b993ad06d8ba2f87fdb30e9e8"},"see"),"."))}d.isMDXComponent=!0}}]);